{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nconst useBooks = (searchQuery, page = 1) => {\n  _s();\n  const [books, setBooks] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [nextPageExists, setNextPageExists] = useState(false);\n  useEffect(() => {\n    // Don't fetch if search query is empty\n    if (!searchQuery || searchQuery.trim() === '') {\n      setBooks([]);\n      setLoading(false);\n      setError(null);\n      setNextPageExists(false);\n      return;\n    }\n    const fetchBooks = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        const response = await fetch(`https://openlibrary.org/search.json?q=${encodeURIComponent(searchQuery)}&page=${page}`);\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n\n        // Parse response.docs and map to our desired format with random price\n        const mappedBooks = data.docs.map(doc => ({\n          key: doc.key,\n          title: doc.title,\n          author_name: doc.author_name ? doc.author_name[0] : 'Unknown Author',\n          cover_i: doc.cover_i,\n          first_publish_year: doc.first_publish_year,\n          price: Math.floor(Math.random() * 50) + 10 // Random price between 10-60 TL\n        }));\n\n        // If it's page 1, replace books, otherwise append\n        if (page === 1) {\n          setBooks(mappedBooks);\n        } else {\n          setBooks(prevBooks => [...prevBooks, ...mappedBooks]);\n        }\n\n        // Check if next page exists (OpenLibrary returns 100 results per page)\n        setNextPageExists(data.docs.length === 100);\n      } catch (err) {\n        setError(err.message);\n        setBooks([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchBooks();\n  }, [searchQuery, page]);\n  return {\n    books,\n    loading,\n    error,\n    nextPageExists\n  };\n};\n_s(useBooks, \"TolKma8Pz5v7g6FrknlQD1c4gMg=\");\nexport default useBooks;","map":{"version":3,"names":["useState","useEffect","useBooks","searchQuery","page","_s","books","setBooks","loading","setLoading","error","setError","nextPageExists","setNextPageExists","trim","fetchBooks","response","fetch","encodeURIComponent","ok","Error","status","data","json","mappedBooks","docs","map","doc","key","title","author_name","cover_i","first_publish_year","price","Math","floor","random","prevBooks","length","err","message"],"sources":["C:/Users/payal/Desktop/Online Kitap Magazasi/src/hooks/useBooks.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nconst useBooks = (searchQuery, page = 1) => {\r\n  const [books, setBooks] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [nextPageExists, setNextPageExists] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Don't fetch if search query is empty\r\n    if (!searchQuery || searchQuery.trim() === '') {\r\n      setBooks([]);\r\n      setLoading(false);\r\n      setError(null);\r\n      setNextPageExists(false);\r\n      return;\r\n    }\r\n\r\n    const fetchBooks = async () => {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      try {\r\n        const response = await fetch(\r\n          `https://openlibrary.org/search.json?q=${encodeURIComponent(searchQuery)}&page=${page}`\r\n        );\r\n        \r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n        \r\n        const data = await response.json();\r\n        \r\n        // Parse response.docs and map to our desired format with random price\r\n        const mappedBooks = data.docs.map(doc => ({\r\n          key: doc.key,\r\n          title: doc.title,\r\n          author_name: doc.author_name ? doc.author_name[0] : 'Unknown Author',\r\n          cover_i: doc.cover_i,\r\n          first_publish_year: doc.first_publish_year,\r\n          price: Math.floor(Math.random() * 50) + 10 // Random price between 10-60 TL\r\n        }));\r\n        \r\n        // If it's page 1, replace books, otherwise append\r\n        if (page === 1) {\r\n          setBooks(mappedBooks);\r\n        } else {\r\n          setBooks(prevBooks => [...prevBooks, ...mappedBooks]);\r\n        }\r\n        \r\n        // Check if next page exists (OpenLibrary returns 100 results per page)\r\n        setNextPageExists(data.docs.length === 100);\r\n      } catch (err) {\r\n        setError(err.message);\r\n        setBooks([]);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchBooks();\r\n  }, [searchQuery, page]);\r\n\r\n  return { books, loading, error, nextPageExists };\r\n};\r\n\r\nexport default useBooks; "],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,MAAMC,QAAQ,GAAGA,CAACC,WAAW,EAAEC,IAAI,GAAG,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACY,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAE3DC,SAAS,CAAC,MAAM;IACd;IACA,IAAI,CAACE,WAAW,IAAIA,WAAW,CAACW,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC7CP,QAAQ,CAAC,EAAE,CAAC;MACZE,UAAU,CAAC,KAAK,CAAC;MACjBE,QAAQ,CAAC,IAAI,CAAC;MACdE,iBAAiB,CAAC,KAAK,CAAC;MACxB;IACF;IAEA,MAAME,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7BN,UAAU,CAAC,IAAI,CAAC;MAChBE,QAAQ,CAAC,IAAI,CAAC;MAEd,IAAI;QACF,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAC1B,yCAAyCC,kBAAkB,CAACf,WAAW,CAAC,SAASC,IAAI,EACvF,CAAC;QAED,IAAI,CAACY,QAAQ,CAACG,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBJ,QAAQ,CAACK,MAAM,EAAE,CAAC;QAC3D;QAEA,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;;QAElC;QACA,MAAMC,WAAW,GAAGF,IAAI,CAACG,IAAI,CAACC,GAAG,CAACC,GAAG,KAAK;UACxCC,GAAG,EAAED,GAAG,CAACC,GAAG;UACZC,KAAK,EAAEF,GAAG,CAACE,KAAK;UAChBC,WAAW,EAAEH,GAAG,CAACG,WAAW,GAAGH,GAAG,CAACG,WAAW,CAAC,CAAC,CAAC,GAAG,gBAAgB;UACpEC,OAAO,EAAEJ,GAAG,CAACI,OAAO;UACpBC,kBAAkB,EAAEL,GAAG,CAACK,kBAAkB;UAC1CC,KAAK,EAAEC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC;QAC7C,CAAC,CAAC,CAAC;;QAEH;QACA,IAAIhC,IAAI,KAAK,CAAC,EAAE;UACdG,QAAQ,CAACiB,WAAW,CAAC;QACvB,CAAC,MAAM;UACLjB,QAAQ,CAAC8B,SAAS,IAAI,CAAC,GAAGA,SAAS,EAAE,GAAGb,WAAW,CAAC,CAAC;QACvD;;QAEA;QACAX,iBAAiB,CAACS,IAAI,CAACG,IAAI,CAACa,MAAM,KAAK,GAAG,CAAC;MAC7C,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZ5B,QAAQ,CAAC4B,GAAG,CAACC,OAAO,CAAC;QACrBjC,QAAQ,CAAC,EAAE,CAAC;MACd,CAAC,SAAS;QACRE,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDM,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACZ,WAAW,EAAEC,IAAI,CAAC,CAAC;EAEvB,OAAO;IAAEE,KAAK;IAAEE,OAAO;IAAEE,KAAK;IAAEE;EAAe,CAAC;AAClD,CAAC;AAACP,EAAA,CA9DIH,QAAQ;AAgEd,eAAeA,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}