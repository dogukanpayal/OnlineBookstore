{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\payal\\\\Desktop\\\\Online Kitap Magazasi\\\\src\\\\context\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\n\n// Cart reducer actions\nconst CART_ACTIONS = {\n  ADD_TO_CART: 'ADD_TO_CART',\n  REMOVE_FROM_CART: 'REMOVE_FROM_CART',\n  CLEAR_CART: 'CLEAR_CART'\n};\n\n// Cart reducer function\nconst cartReducer = (state, action) => {\n  switch (action.type) {\n    case CART_ACTIONS.ADD_TO_CART:\n      const existingItem = state.cartItems.find(item => item.id === action.payload.id);\n      if (existingItem) {\n        // If item exists, increase quantity\n        return {\n          ...state,\n          cartItems: state.cartItems.map(item => item.id === action.payload.id ? {\n            ...item,\n            quantity: item.quantity + 1\n          } : item)\n        };\n      } else {\n        // If item doesn't exist, add it with quantity 1\n        return {\n          ...state,\n          cartItems: [...state.cartItems, {\n            ...action.payload,\n            quantity: 1\n          }]\n        };\n      }\n    case CART_ACTIONS.REMOVE_FROM_CART:\n      return {\n        ...state,\n        cartItems: state.cartItems.filter(item => item.id !== action.payload)\n      };\n    case CART_ACTIONS.CLEAR_CART:\n      return {\n        ...state,\n        cartItems: []\n      };\n    default:\n      return state;\n  }\n};\n\n// Get initial state from localStorage\nconst getInitialState = () => {\n  try {\n    const savedCart = localStorage.getItem(\"myCart\");\n    if (savedCart) {\n      const parsedCart = JSON.parse(savedCart);\n      return {\n        cartItems: Array.isArray(parsedCart) ? parsedCart : []\n      };\n    }\n  } catch (error) {\n    console.error(\"Error parsing cart from localStorage:\", error);\n  }\n  return {\n    cartItems: []\n  };\n};\nexport const useCart = () => {\n  _s();\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n};\n_s(useCart, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const CartProvider = ({\n  children\n}) => {\n  _s2();\n  const [state, dispatch] = useReducer(cartReducer, getInitialState());\n\n  // Sync cartItems to localStorage whenever it changes\n  useEffect(() => {\n    try {\n      localStorage.setItem(\"myCart\", JSON.stringify(state.cartItems));\n    } catch (error) {\n      console.error(\"Error saving cart to localStorage:\", error);\n    }\n  }, [state.cartItems]);\n  const addToCart = book => {\n    dispatch({\n      type: CART_ACTIONS.ADD_TO_CART,\n      payload: book\n    });\n  };\n  const removeFromCart = bookId => {\n    dispatch({\n      type: CART_ACTIONS.REMOVE_FROM_CART,\n      payload: bookId\n    });\n  };\n  const clearCart = () => {\n    dispatch({\n      type: CART_ACTIONS.CLEAR_CART\n    });\n  };\n  const value = {\n    cartItems: state.cartItems,\n    addToCart,\n    removeFromCart,\n    clearCart\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n_s2(CartProvider, \"ZhKy+pGuhSnYO+lrhULvLXYYCPE=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","jsxDEV","_jsxDEV","CartContext","CART_ACTIONS","ADD_TO_CART","REMOVE_FROM_CART","CLEAR_CART","cartReducer","state","action","type","existingItem","cartItems","find","item","id","payload","map","quantity","filter","getInitialState","savedCart","localStorage","getItem","parsedCart","JSON","parse","Array","isArray","error","console","useCart","_s","context","Error","CartProvider","children","_s2","dispatch","setItem","stringify","addToCart","book","removeFromCart","bookId","clearCart","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/payal/Desktop/Online Kitap Magazasi/src/context/CartContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\n\nconst CartContext = createContext();\n\n// Cart reducer actions\nconst CART_ACTIONS = {\n  ADD_TO_CART: 'ADD_TO_CART',\n  REMOVE_FROM_CART: 'REMOVE_FROM_CART',\n  CLEAR_CART: 'CLEAR_CART'\n};\n\n// Cart reducer function\nconst cartReducer = (state, action) => {\n  switch (action.type) {\n    case CART_ACTIONS.ADD_TO_CART:\n      const existingItem = state.cartItems.find(item => item.id === action.payload.id);\n      \n      if (existingItem) {\n        // If item exists, increase quantity\n        return {\n          ...state,\n          cartItems: state.cartItems.map(item =>\n            item.id === action.payload.id\n              ? { ...item, quantity: item.quantity + 1 }\n              : item\n          )\n        };\n      } else {\n        // If item doesn't exist, add it with quantity 1\n        return {\n          ...state,\n          cartItems: [...state.cartItems, { ...action.payload, quantity: 1 }]\n        };\n      }\n\n    case CART_ACTIONS.REMOVE_FROM_CART:\n      return {\n        ...state,\n        cartItems: state.cartItems.filter(item => item.id !== action.payload)\n      };\n\n    case CART_ACTIONS.CLEAR_CART:\n      return {\n        ...state,\n        cartItems: []\n      };\n\n    default:\n      return state;\n  }\n};\n\n// Get initial state from localStorage\nconst getInitialState = () => {\n  try {\n    const savedCart = localStorage.getItem(\"myCart\");\n    if (savedCart) {\n      const parsedCart = JSON.parse(savedCart);\n      return {\n        cartItems: Array.isArray(parsedCart) ? parsedCart : []\n      };\n    }\n  } catch (error) {\n    console.error(\"Error parsing cart from localStorage:\", error);\n  }\n  return {\n    cartItems: []\n  };\n};\n\nexport const useCart = () => {\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n};\n\nexport const CartProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(cartReducer, getInitialState());\n\n  // Sync cartItems to localStorage whenever it changes\n  useEffect(() => {\n    try {\n      localStorage.setItem(\"myCart\", JSON.stringify(state.cartItems));\n    } catch (error) {\n      console.error(\"Error saving cart to localStorage:\", error);\n    }\n  }, [state.cartItems]);\n\n  const addToCart = (book) => {\n    dispatch({ type: CART_ACTIONS.ADD_TO_CART, payload: book });\n  };\n\n  const removeFromCart = (bookId) => {\n    dispatch({ type: CART_ACTIONS.REMOVE_FROM_CART, payload: bookId });\n  };\n\n  const clearCart = () => {\n    dispatch({ type: CART_ACTIONS.CLEAR_CART });\n  };\n\n  const value = {\n    cartItems: state.cartItems,\n    addToCart,\n    removeFromCart,\n    clearCart\n  };\n\n  return (\n    <CartContext.Provider value={value}>\n      {children}\n    </CartContext.Provider>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}